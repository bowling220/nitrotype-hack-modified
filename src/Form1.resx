<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>